import { Link, NavLink } from "react-router-dom";
import { useState } from "react";

function SideBar({ children }: any) {
  const [overview, setOverview] = useState(false);
  const [trending, setTrending] = useState(false);
  const [person, setPersonal] = useState(false);

  function handleOverview() {
    setOverview(!overview);
  }
  function handleTrending() {
    setTrending(!trending);
  }
  function handlePersonal() {
    setPersonal(!person);
  }

  const listItem = [
    {
      path: "/feeds",
      name: "Feed",
      icon: (
        <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path
            d="M20 1H8C7.4 1 7 1.4 7 2V5C7 5.6 7.4 6 8 6H20C20.6 6 21 5.6 21 5V2C21 1.4 20.6 1 20 1ZM11 16H6V21H11V16ZM6 8.5H1V13.5H6V8.5ZM17 8.6H8.5V13.3H17V8.6Z"
            stroke="currentColor"
            stroke-width="1.5"
            stroke-miterlimit="10"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
        </svg>
      ),
    },
    {
      path: "/bookmark",
      name: "Bookmark",
      icon: (
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path
            d="M16.5 7V22.2417L10.197 19.5404L10 19.456L9.80304 19.5404L3.5 22.2417V7C3.5 6.58379 3.64248 6.23962 3.94155 5.94055C4.24061 5.6415 4.58424 5.4995 4.99939 5.5H5H15C15.4162 5.5 15.7604 5.64248 16.0594 5.94155C16.3585 6.2406 16.5005 6.58424 16.5 6.99939V7ZM5 5H15C15.55 5 16.021 5.196 16.413 5.588C16.805 5.98 17.0007 6.45067 17 7L5 5ZM4.5 19.95V20.7093L5.19751 20.4093L10 18.3443L14.8025 20.4093L15.5 20.7093V19.95V7V6.5H15H5H4.5V7V19.95ZM20.5 3V19.5H19.5V3V2.5H19H6.5V1.5H19C19.4162 1.5 19.7604 1.64248 20.0594 1.94155C20.3585 2.24061 20.5005 2.58424 20.5 2.99939V3Z"
            fill="currentColor"
            stroke="currentColor"
          />
        </svg>
      ),
    },
    {
      path: "/teamblogs",
      name: "Team blogs",
      icon: (
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path
            d="M19.3172 16.404C18.7306 15.8169 18.0451 15.3377 17.2922 14.9883C18.354 14.1282 19.0313 12.8157 19.0313 11.3438C19.0313 8.74694 16.8657 6.61647 14.2688 6.65631C11.7118 6.69616 9.65162 8.77975 9.65162 11.3438C9.65162 12.8157 10.3313 14.1282 11.3907 14.9883C10.6377 15.3374 9.95214 15.8166 9.36568 16.404C8.086 17.686 7.35943 19.3782 7.31256 21.1829C7.31193 21.2079 7.31632 21.2328 7.32546 21.2561C7.33461 21.2794 7.34832 21.3006 7.36579 21.3185C7.38326 21.3364 7.40415 21.3506 7.42721 21.3604C7.45027 21.3701 7.47504 21.3751 7.50006 21.3751H8.81256C8.91334 21.3751 8.99771 21.2954 9.00006 21.1946C9.04459 19.8352 9.59537 18.5626 10.5633 17.5969C11.0587 17.099 11.6478 16.7042 12.2968 16.4355C12.9457 16.1667 13.6414 16.0294 14.3438 16.0313C15.7712 16.0313 17.1141 16.5868 18.1243 17.5969C19.0899 18.5626 19.6407 19.8352 19.6876 21.1946C19.6899 21.2954 19.7743 21.3751 19.8751 21.3751H21.1876C21.2126 21.3751 21.2374 21.3701 21.2604 21.3604C21.2835 21.3506 21.3044 21.3364 21.3218 21.3185C21.3393 21.3006 21.353 21.2794 21.3622 21.2561C21.3713 21.2328 21.3757 21.2079 21.3751 21.1829C21.3282 19.3782 20.6016 17.686 19.3172 16.404ZM14.3438 14.3438C13.5422 14.3438 12.7876 14.0321 12.2227 13.4649C11.9392 13.1837 11.7153 12.8482 11.5643 12.4786C11.4133 12.1089 11.3383 11.7126 11.3438 11.3133C11.3508 10.5446 11.6579 9.80162 12.1946 9.25084C12.7571 8.67428 13.5094 8.35319 14.3133 8.34381C15.1079 8.33678 15.879 8.64616 16.4462 9.20162C17.0274 9.77116 17.3462 10.5329 17.3462 11.3438C17.3462 12.1454 17.0344 12.8977 16.4672 13.4649C16.189 13.7445 15.858 13.9661 15.4935 14.117C15.1291 14.2679 14.7383 14.345 14.3438 14.3438ZM8.47271 11.9626C8.45162 11.7587 8.4399 11.5524 8.4399 11.3438C8.4399 10.9712 8.47506 10.6079 8.54068 10.254C8.55709 10.1696 8.51256 10.0829 8.43521 10.0477C8.11646 9.90475 7.8235 9.70787 7.57037 9.45944C7.2721 9.17024 7.0374 8.82203 6.88123 8.43705C6.72505 8.05207 6.65085 7.63876 6.66334 7.2235C6.68443 6.47116 6.98678 5.75631 7.51412 5.21725C8.09303 4.62428 8.87115 4.30084 9.6985 4.31022C10.4462 4.31725 11.168 4.60553 11.7141 5.11647C11.8993 5.28991 12.0587 5.48209 12.1922 5.68834C12.2391 5.761 12.3305 5.79147 12.4102 5.76334C12.8227 5.62037 13.2587 5.51959 13.7063 5.47272C13.8376 5.45866 13.9126 5.31803 13.854 5.20084C13.0922 3.69381 11.536 2.65319 9.736 2.62506C7.13678 2.58522 4.97115 4.71569 4.97115 7.31022C4.97115 8.78209 5.6485 10.0946 6.71021 10.9547C5.9649 11.2993 5.27818 11.7751 4.68287 12.3704C3.3985 13.6524 2.67193 15.3446 2.62506 17.1516C2.62443 17.1766 2.62882 17.2015 2.63796 17.2248C2.64711 17.2481 2.66082 17.2693 2.67829 17.2872C2.69576 17.3052 2.71665 17.3194 2.73971 17.3291C2.76277 17.3388 2.78754 17.3438 2.81256 17.3438H4.1274C4.22818 17.3438 4.31256 17.2641 4.3149 17.1633C4.35943 15.804 4.91021 14.5313 5.87818 13.5657C6.56725 12.8766 7.411 12.3985 8.33209 12.1665C8.4235 12.143 8.48443 12.0563 8.47271 11.9626Z"
            fill="currentColor"
          />
        </svg>
      ),
    },
    {
      path: "/drafts",
      name: "Drafts",
      icon: (
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path
            d="M12 1L21.05 6.4C21.35 6.58333 21.5833 6.83333 21.75 7.15C21.9167 7.46667 22 7.8 22 8.15V19C22 19.55 21.804 20.021 21.412 20.413C21.02 20.805 20.5493 21.0007 20 21H4C3.45 21 2.979 20.804 2.587 20.412C2.195 20.02 1.99934 19.5493 2 19V8.15C2 7.8 2.08334 7.46667 2.25 7.15C2.41667 6.83333 2.65 6.58333 2.95 6.4L12 1ZM12 12.65L19.8 8L12 3.35L4.2 8L12 12.65ZM12 15L4 10.2V19H20V10.2L12 15ZM12 19H20H4H12Z"
            fill="currentColor"
          />
        </svg>
      ),
    },
    {
      path: "/analytics",
      name: "Analytics",
      icon: (
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19Z" fill="currentColor" />
          <path d="M7 12H9V17H7V12ZM15 7H17V17H15V7ZM11 14H13V17H11V14ZM11 10H13V12H11V10Z" fill="currentColor" />
        </svg>
      ),
    },
  ];
  const trendingTags = [
    {
      path: "/programming",
      name: "Programming",
    },
    {
      path: "/datascience",
      name: "Data science",
    },
    {
      path: "/technology",
      name: "Technology",
    },
    {
      path: "/machinelearning",
      name: "Machine Learning",
    },
    {
      path: "/politics",
      name: "Politics",
    },
  ];
  const personal = [
    {
      path: "/notification",
      name: "Notification",
      icon: (
        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path
            d="M8 0C9.06087 0 10.0783 0.421427 10.8284 1.17157C11.5786 1.92172 12 2.93913 12 4C12 5.06087 11.5786 6.07828 10.8284 6.82843C10.0783 7.57857 9.06087 8 8 8C6.93913 8 5.92172 7.57857 5.17157 6.82843C4.42143 6.07828 4 5.06087 4 4C4 2.93913 4.42143 1.92172 5.17157 1.17157C5.92172 0.421427 6.93913 0 8 0ZM8 2C7.46957 2 6.96086 2.21071 6.58579 2.58579C6.21071 2.96086 6 3.46957 6 4C6 4.53043 6.21071 5.03914 6.58579 5.41421C6.96086 5.78929 7.46957 6 8 6C8.53043 6 9.03914 5.78929 9.41421 5.41421C9.78929 5.03914 10 4.53043 10 4C10 3.46957 9.78929 2.96086 9.41421 2.58579C9.03914 2.21071 8.53043 2 8 2ZM8 9C10.67 9 16 10.33 16 13V16H0V13C0 10.33 5.33 9 8 9ZM8 10.9C5.03 10.9 1.9 12.36 1.9 13V14.1H14.1V13C14.1 12.36 10.97 10.9 8 10.9Z"
            fill="currentColor"
          />
        </svg>
      ),
    },
    {
      path: "/account",
      name: "Account",
      icon: (
        <svg width="16" height="20" viewBox="0 0 16 20" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M8.99961 1C8.99961 0.734784 8.89426 0.48043 8.70672 0.292893C8.51918 0.105357 8.26483 0 7.99961 0C7.7344 0 7.48004 0.105357 7.29251 0.292893C7.10497 0.48043 6.99961 0.734784 6.99961 1V1.75H6.44261C5.37064 1.74993 4.33894 2.15839 3.55754 2.89224C2.77613 3.62608 2.30377 4.63014 2.23661 5.7L2.01561 9.234C1.93134 10.5814 1.47891 11.8799 0.707615 12.988C0.548248 13.2171 0.450872 13.4835 0.424957 13.7613C0.399043 14.0392 0.445471 14.319 0.559727 14.5736C0.673983 14.8281 0.852178 15.0488 1.07698 15.2142C1.30179 15.3795 1.56555 15.4838 1.84261 15.517L5.24961 15.925V17C5.24961 17.7293 5.53935 18.4288 6.05507 18.9445C6.5708 19.4603 7.27027 19.75 7.99961 19.75C8.72896 19.75 9.42843 19.4603 9.94416 18.9445C10.4599 18.4288 10.7496 17.7293 10.7496 17V15.925L14.1566 15.516C14.4335 15.4827 14.6971 15.3784 14.9218 15.2131C15.1464 15.0478 15.3245 14.8273 15.4388 14.5729C15.553 14.3184 15.5995 14.0388 15.5737 13.7611C15.5479 13.4834 15.4507 13.2171 15.2916 12.988C14.5203 11.88 14.0678 10.5815 13.9836 9.234L13.7626 5.701C13.6957 4.63096 13.2234 3.62665 12.442 2.8926C11.6606 2.15855 10.6287 1.74995 9.55661 1.75H8.99961V1ZM6.44261 3.25C5.75219 3.24992 5.08769 3.51297 4.58439 3.98561C4.0811 4.45825 3.77686 5.10493 3.73361 5.794L3.51361 9.328C3.41196 10.949 2.86753 12.511 1.93961 13.844C1.92808 13.8606 1.92103 13.8798 1.91915 13.8999C1.91727 13.92 1.92062 13.9403 1.92887 13.9587C1.93712 13.9771 1.95 13.9931 1.96625 14.005C1.9825 14.017 2.00158 14.0246 2.02161 14.027L5.75861 14.476C7.24761 14.654 8.75161 14.654 10.2406 14.476L13.9776 14.027C13.9977 14.0246 14.0167 14.017 14.033 14.005C14.0492 13.9931 14.0621 13.9771 14.0704 13.9587C14.0786 13.9403 14.082 13.92 14.0801 13.8999C14.0782 13.8798 14.0711 13.8606 14.0596 13.844C13.1321 12.5109 12.588 10.9489 12.4866 9.328L12.2656 5.794C12.2224 5.10493 11.9181 4.45825 11.4148 3.98561C10.9115 3.51297 10.247 3.24992 9.55661 3.25H6.44261ZM7.99961 18.25C7.30961 18.25 6.74961 17.69 6.74961 17V16.25H9.24961V17C9.24961 17.69 8.68961 18.25 7.99961 18.25Z"
            fill="currentColor"
          />
        </svg>
      ),
    },
  ];
  return (
    <>
      <div className=" w-[268px] border-r-[1px]   h-screen overflow-y-scroll fixed border-r-[#D0D0D0] pl-[30px]  ">
        <Link onClick={() => window.scrollTo(0, 0)} className="w-[10%] pt-[10px]" to="/home">
          <div>
            <h1 className=" text-[48px] text-[#543EE0] font-[600] ">CHATTER</h1>
          </div>
        </Link>
        <div className=" mt-[24px]  ">
          <h1 onClick={handleOverview} className=" text-[18px] text-[#111111] font-[500] ml-[30px] cursor-pointer ">
            {" "}
            Overview
          </h1>
          {overview === false && (
            <div className=" mt-[33px] h-[35vh]">
              {listItem.map((item, index) => (
                <NavLink
                  onClick={() => window.scrollTo(0, 0)}
                  className={({ isActive }) =>
                    isActive ? "flex w-[150px] text-[#543EE0] text-left  text-[16px] ml-[20px] mb-[20px] items-center justify-between" : "flex items-center  ml-[20px] mb-[20px] text-left  w-[150px] text-[#626262] text-[16px]  justify-between"
                  }
                  to={item.path}
                  key={index}
                >
                  <div className="">{item.icon}</div>
                  <h2 className="text-left w-[100px]">{item.name}</h2>
                </NavLink>
              ))}
            </div>
          )}
        </div>
        <div className=" mt-[24px]  ">
          <h1 onClick={handleTrending} className=" text-[18px] flex w-[150px] justify-between items-center text-[#111111] font-[500] ml-[20px] cursor-pointer ">
            {" "}
            Trending Tags
            <svg width="20" height="13" viewBox="0 0 20 13" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path
                d="M18.9998 1.5C19.0093 1.43032 19.0093 1.35968 18.9998 1.29C18.9911 1.23129 18.9743 1.17407 18.9498 1.12C18.9234 1.07113 18.8933 1.02433 18.8598 0.98C18.8218 0.916753 18.7746 0.859469 18.7198 0.81L18.5998 0.74C18.5421 0.696956 18.478 0.663215 18.4098 0.64H18.2098C18.1489 0.580995 18.0777 0.533558 17.9998 0.5H12.9998C12.7346 0.5 12.4802 0.605357 12.2927 0.792893C12.1052 0.98043 11.9998 1.23478 11.9998 1.5C11.9998 1.76522 12.1052 2.01957 12.2927 2.20711C12.4802 2.39464 12.7346 2.5 12.9998 2.5H15.8298L11.8298 7.21L7.50981 4.64C7.30519 4.5183 7.06387 4.47359 6.82923 4.51392C6.5946 4.55425 6.38205 4.67696 6.22981 4.86L1.22981 10.86C1.14561 10.961 1.08217 11.0777 1.04312 11.2033C1.00408 11.3289 0.990194 11.461 1.00227 11.592C1.01435 11.7229 1.05214 11.8503 1.11349 11.9666C1.17485 12.0829 1.25855 12.1861 1.35981 12.27C1.53972 12.4191 1.76616 12.5005 1.99981 12.5C2.14672 12.5002 2.29188 12.4681 2.42496 12.4059C2.55804 12.3437 2.67578 12.2529 2.76981 12.14L7.21981 6.8L11.4898 9.36C11.6923 9.48013 11.9308 9.52493 12.1631 9.48651C12.3954 9.4481 12.6067 9.32893 12.7598 9.15L16.9998 4.2V6.5C16.9998 6.76522 17.1052 7.01957 17.2927 7.20711C17.4802 7.39464 17.7346 7.5 17.9998 7.5C18.265 7.5 18.5194 7.39464 18.7069 7.20711C18.8945 7.01957 18.9998 6.76522 18.9998 6.5V1.5Z"
                fill="#626262"
              />
            </svg>
          </h1>
          {trending === false && (
            <div className=" mt-[33px] h-[35vh]">
              {trendingTags.map((trend, index) => (
                <NavLink
                  onClick={() => window.scrollTo(0, 0)}
                  className={({ isActive }) =>
                    isActive ? "flex w-[150px] text-[#543EE0] text-left  text-[16px] ml-[20px] mb-[20px] items-center justify-between" : "flex items-center  ml-[20px] mb-[20px] text-left  w-[150px] text-[#626262] text-[16px]  justify-between"
                  }
                  to={trend.path}
                  key={index}
                >
                  <h2 className="">{trend.name}</h2>
                </NavLink>
              ))}
            </div>
          )}
        </div>
        <div className=" mt-[24px]  ">
          <h1 onClick={handlePersonal} className=" text-[18px] text-[#111111] font-[500] ml-[25px] cursor-pointer ">
            {" "}
            Personal
          </h1>

          {person === false && (
            <div className=" mt-[33px] h-[15vh]">
              {personal.map((trend, index) => (
                <NavLink
                  onClick={() => window.scrollTo(0, 0)}
                  className={({ isActive }) =>
                    isActive ? "flex w-[150px] text-[#543EE0] text-left  text-[16px] ml-[20px] mb-[20px] items-center justify-between" : "flex items-center  ml-[20px] mb-[20px] text-left  w-[150px] text-[#626262] text-[16px]  justify-between"
                  }
                  to={trend.path}
                  key={index}
                >
                  <div>{trend.icon}</div>
                  <h2 className="text-left w-[100px]">{trend.name}</h2>
                </NavLink>
              ))}
              <br />
            </div>
          )}
          <Link to="/login">
            <h1 className=" text-[18px] mt-[20px] h-[10vh] text-[#FF1400] font-[500] ml-[30px] cursor-pointer "> Log out</h1>
          </Link>
        </div>
      </div>
      <main>{children}</main>
    </>
  );
}

export default SideBar;
